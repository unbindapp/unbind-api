// Code generated by ent, DO NOT EDIT.

package buildkitsettings

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/unbindapp/unbind-api/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldEQ(FieldUpdatedAt, v))
}

// MaxParallelism applies equality check predicate on the "max_parallelism" field. It's identical to MaxParallelismEQ.
func MaxParallelism(v int) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldEQ(FieldMaxParallelism, v))
}

// Replicas applies equality check predicate on the "replicas" field. It's identical to ReplicasEQ.
func Replicas(v int) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldEQ(FieldReplicas, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldLTE(FieldUpdatedAt, v))
}

// MaxParallelismEQ applies the EQ predicate on the "max_parallelism" field.
func MaxParallelismEQ(v int) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldEQ(FieldMaxParallelism, v))
}

// MaxParallelismNEQ applies the NEQ predicate on the "max_parallelism" field.
func MaxParallelismNEQ(v int) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldNEQ(FieldMaxParallelism, v))
}

// MaxParallelismIn applies the In predicate on the "max_parallelism" field.
func MaxParallelismIn(vs ...int) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldIn(FieldMaxParallelism, vs...))
}

// MaxParallelismNotIn applies the NotIn predicate on the "max_parallelism" field.
func MaxParallelismNotIn(vs ...int) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldNotIn(FieldMaxParallelism, vs...))
}

// MaxParallelismGT applies the GT predicate on the "max_parallelism" field.
func MaxParallelismGT(v int) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldGT(FieldMaxParallelism, v))
}

// MaxParallelismGTE applies the GTE predicate on the "max_parallelism" field.
func MaxParallelismGTE(v int) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldGTE(FieldMaxParallelism, v))
}

// MaxParallelismLT applies the LT predicate on the "max_parallelism" field.
func MaxParallelismLT(v int) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldLT(FieldMaxParallelism, v))
}

// MaxParallelismLTE applies the LTE predicate on the "max_parallelism" field.
func MaxParallelismLTE(v int) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldLTE(FieldMaxParallelism, v))
}

// ReplicasEQ applies the EQ predicate on the "replicas" field.
func ReplicasEQ(v int) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldEQ(FieldReplicas, v))
}

// ReplicasNEQ applies the NEQ predicate on the "replicas" field.
func ReplicasNEQ(v int) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldNEQ(FieldReplicas, v))
}

// ReplicasIn applies the In predicate on the "replicas" field.
func ReplicasIn(vs ...int) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldIn(FieldReplicas, vs...))
}

// ReplicasNotIn applies the NotIn predicate on the "replicas" field.
func ReplicasNotIn(vs ...int) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldNotIn(FieldReplicas, vs...))
}

// ReplicasGT applies the GT predicate on the "replicas" field.
func ReplicasGT(v int) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldGT(FieldReplicas, v))
}

// ReplicasGTE applies the GTE predicate on the "replicas" field.
func ReplicasGTE(v int) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldGTE(FieldReplicas, v))
}

// ReplicasLT applies the LT predicate on the "replicas" field.
func ReplicasLT(v int) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldLT(FieldReplicas, v))
}

// ReplicasLTE applies the LTE predicate on the "replicas" field.
func ReplicasLTE(v int) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.FieldLTE(FieldReplicas, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.BuildkitSettings) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.BuildkitSettings) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.BuildkitSettings) predicate.BuildkitSettings {
	return predicate.BuildkitSettings(sql.NotPredicates(p))
}
