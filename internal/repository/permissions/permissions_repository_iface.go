// Code generated by ifacemaker; DO NOT EDIT.

package permissions_repo

import (
	"context"

	"github.com/google/uuid"
	"github.com/unbindapp/unbind-api/ent"
	"github.com/unbindapp/unbind-api/ent/permission"
)

// PermissionsRepositoryInterface ...
type PermissionsRepositoryInterface interface {
	// Check if a user has any of the provided permissions. If any check passes, the permission is granted.
	Check(ctx context.Context, userID uuid.UUID, checks []PermissionCheck) error
	// HasPermission checks if a user has a specific permission on a resource
	HasPermission(ctx context.Context, userID uuid.UUID, action permission.Action, resourceType permission.ResourceType, resourceID string) (bool, error)
	Create(ctx context.Context, action permission.Action, resourceType permission.ResourceType, resourceID string, scope string) (*ent.Permission, error)
	AddToGroup(ctx context.Context, groupID, permissionID uuid.UUID) error
	Delete(ctx context.Context, id uuid.UUID) error
	RemoveFromGroup(ctx context.Context, groupID, permissionID uuid.UUID) error
	GetByID(ctx context.Context, id uuid.UUID) (*ent.Permission, error)
}
