// Code generated by ifacemaker; DO NOT EDIT.

package deployctl

import (
	"context"

	"github.com/google/uuid"
	"github.com/unbindapp/unbind-api/ent"
)

// DeploymentControllerInterface ...
type DeploymentControllerInterface interface {
	// Start queue processor
	StartAsync()
	// Stop stops the deployment manager
	Stop()
	// Populate build environment, take tag separately so we can use it to build from tag
	PopulateBuildEnvironment(ctx context.Context, serviceID uuid.UUID, gitTag *string) (map[string]string, error)
	// EnqueueDeploymentJob adds a deployment to the queue
	EnqueueDeploymentJob(ctx context.Context, req DeploymentJobRequest) (job *ent.Deployment, err error)
	// cancelExistingJobs marks all pending jobs for a service as cancelled in the DB
	// and removes them from the queue
	CancelExistingJobs(ctx context.Context, serviceID uuid.UUID) error
	// SyncJobStatuses synchronizes the status of all processing jobs with Kubernetes
	SyncJobStatuses(ctx context.Context) error
	// AreDependenciesReady checks if all dependencies for a service are ready
	AreDependenciesReady(ctx context.Context, req DeploymentJobRequest) bool
	// EnqueueDependentDeployment adds a deployment to the dependent services queue
	EnqueueDependentDeployment(ctx context.Context, req DeploymentJobRequest) (*ent.Deployment, error)
}
