// Code generated by ifacemaker; DO NOT EDIT.

package repositories

import (
	"context"

	"github.com/unbindapp/unbind-api/ent"
	repository "github.com/unbindapp/unbind-api/internal/repositories"
	bootstrap_repo "github.com/unbindapp/unbind-api/internal/repositories/bootstrap"
	deployment_repo "github.com/unbindapp/unbind-api/internal/repositories/deployment"
	environment_repo "github.com/unbindapp/unbind-api/internal/repositories/environment"
	github_repo "github.com/unbindapp/unbind-api/internal/repositories/github"
	group_repo "github.com/unbindapp/unbind-api/internal/repositories/group"
	oauth_repo "github.com/unbindapp/unbind-api/internal/repositories/oauth"
	permissions_repo "github.com/unbindapp/unbind-api/internal/repositories/permissions"
	project_repo "github.com/unbindapp/unbind-api/internal/repositories/project"
	s3_repo "github.com/unbindapp/unbind-api/internal/repositories/s3"
	service_repo "github.com/unbindapp/unbind-api/internal/repositories/service"
	servicegroup_repo "github.com/unbindapp/unbind-api/internal/repositories/service_group"
	system_repo "github.com/unbindapp/unbind-api/internal/repositories/system"
	team_repo "github.com/unbindapp/unbind-api/internal/repositories/team"
	template_repo "github.com/unbindapp/unbind-api/internal/repositories/template"
	user_repo "github.com/unbindapp/unbind-api/internal/repositories/user"
	variable_repo "github.com/unbindapp/unbind-api/internal/repositories/variables"
	webhook_repo "github.com/unbindapp/unbind-api/internal/repositories/webhook"
)

// RepositoriesInterface ...
type RepositoriesInterface interface {
	// Ent() returns the ent client
	Ent() *ent.Client
	// Github returns the GitHub repository
	Github() github_repo.GithubRepositoryInterface
	// User returns the User repository
	User() user_repo.UserRepositoryInterface
	// Oauth returns the OAuth repository
	Oauth() oauth_repo.OauthRepositoryInterface
	// Group returns the Group repository
	Group() group_repo.GroupRepositoryInterface
	// Project returns the Project repository
	Project() project_repo.ProjectRepositoryInterface
	// Team returns the Team repository
	Team() team_repo.TeamRepositoryInterface
	// Permissions returns the Permissions repository
	Permissions() permissions_repo.PermissionsRepositoryInterface
	// Environment returns the Environment repository
	Environment() environment_repo.EnvironmentRepositoryInterface
	// Service returns the Service repository
	Service() service_repo.ServiceRepositoryInterface
	// Deployment returns the Deployment repository
	Deployment() deployment_repo.DeploymentRepositoryInterface
	// System returns the System repository
	System() system_repo.SystemRepositoryInterface
	// Webhooks returns the Webhook repository
	Webhooks() webhook_repo.WebhookRepositoryInterface
	// Variables returns the Variable repository
	Variables() variable_repo.VariableRepositoryInterface
	// Bootstrap returns the Bootstrap repository
	Bootstrap() bootstrap_repo.BootstrapRepositoryInterface
	// S3 returns the S3 repository
	S3() s3_repo.S3RepositoryInterface
	// Template returns the Template repository
	Template() template_repo.TemplateRepositoryInterface
	ServiceGroup() servicegroup_repo.ServiceGroupRepositoryInterface
	WithTx(ctx context.Context, fn func(tx repository.TxInterface) error) error
}
