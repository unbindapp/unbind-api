// Code generated by mockery v2.52.2. DO NOT EDIT.

package mocks_repository_tx

import (
	mock "github.com/stretchr/testify/mock"
	ent "github.com/unbindapp/unbind-api/ent"
)

// TxMock is an autogenerated mock type for the TxInterface type
type TxMock struct {
	mock.Mock
}

type TxMock_Expecter struct {
	mock *mock.Mock
}

func (_m *TxMock) EXPECT() *TxMock_Expecter {
	return &TxMock_Expecter{mock: &_m.Mock}
}

// Client provides a mock function with no fields
func (_m *TxMock) Client() *ent.Client {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Client")
	}

	var r0 *ent.Client
	if rf, ok := ret.Get(0).(func() *ent.Client); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ent.Client)
		}
	}

	return r0
}

// TxMock_Client_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Client'
type TxMock_Client_Call struct {
	*mock.Call
}

// Client is a helper method to define mock.On call
func (_e *TxMock_Expecter) Client() *TxMock_Client_Call {
	return &TxMock_Client_Call{Call: _e.mock.On("Client")}
}

func (_c *TxMock_Client_Call) Run(run func()) *TxMock_Client_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *TxMock_Client_Call) Return(_a0 *ent.Client) *TxMock_Client_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *TxMock_Client_Call) RunAndReturn(run func() *ent.Client) *TxMock_Client_Call {
	_c.Call.Return(run)
	return _c
}

// Commit provides a mock function with no fields
func (_m *TxMock) Commit() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Commit")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TxMock_Commit_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Commit'
type TxMock_Commit_Call struct {
	*mock.Call
}

// Commit is a helper method to define mock.On call
func (_e *TxMock_Expecter) Commit() *TxMock_Commit_Call {
	return &TxMock_Commit_Call{Call: _e.mock.On("Commit")}
}

func (_c *TxMock_Commit_Call) Run(run func()) *TxMock_Commit_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *TxMock_Commit_Call) Return(_a0 error) *TxMock_Commit_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *TxMock_Commit_Call) RunAndReturn(run func() error) *TxMock_Commit_Call {
	_c.Call.Return(run)
	return _c
}

// Rollback provides a mock function with no fields
func (_m *TxMock) Rollback() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Rollback")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TxMock_Rollback_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Rollback'
type TxMock_Rollback_Call struct {
	*mock.Call
}

// Rollback is a helper method to define mock.On call
func (_e *TxMock_Expecter) Rollback() *TxMock_Rollback_Call {
	return &TxMock_Rollback_Call{Call: _e.mock.On("Rollback")}
}

func (_c *TxMock_Rollback_Call) Run(run func()) *TxMock_Rollback_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *TxMock_Rollback_Call) Return(_a0 error) *TxMock_Rollback_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *TxMock_Rollback_Call) RunAndReturn(run func() error) *TxMock_Rollback_Call {
	_c.Call.Return(run)
	return _c
}

// NewTxMock creates a new instance of TxMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTxMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *TxMock {
	mock := &TxMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
