// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks_config

import mock "github.com/stretchr/testify/mock"

// ConfigMock is an autogenerated mock type for the ConfigInterface type
type ConfigMock struct {
	mock.Mock
}

type ConfigMock_Expecter struct {
	mock *mock.Mock
}

func (_m *ConfigMock) EXPECT() *ConfigMock_Expecter {
	return &ConfigMock_Expecter{mock: &_m.Mock}
}

// GetBuildImage provides a mock function with no fields
func (_m *ConfigMock) GetBuildImage() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetBuildImage")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ConfigMock_GetBuildImage_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetBuildImage'
type ConfigMock_GetBuildImage_Call struct {
	*mock.Call
}

// GetBuildImage is a helper method to define mock.On call
func (_e *ConfigMock_Expecter) GetBuildImage() *ConfigMock_GetBuildImage_Call {
	return &ConfigMock_GetBuildImage_Call{Call: _e.mock.On("GetBuildImage")}
}

func (_c *ConfigMock_GetBuildImage_Call) Run(run func()) *ConfigMock_GetBuildImage_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ConfigMock_GetBuildImage_Call) Return(_a0 string) *ConfigMock_GetBuildImage_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ConfigMock_GetBuildImage_Call) RunAndReturn(run func() string) *ConfigMock_GetBuildImage_Call {
	_c.Call.Return(run)
	return _c
}

// GetBuildkitHost provides a mock function with no fields
func (_m *ConfigMock) GetBuildkitHost() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetBuildkitHost")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ConfigMock_GetBuildkitHost_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetBuildkitHost'
type ConfigMock_GetBuildkitHost_Call struct {
	*mock.Call
}

// GetBuildkitHost is a helper method to define mock.On call
func (_e *ConfigMock_Expecter) GetBuildkitHost() *ConfigMock_GetBuildkitHost_Call {
	return &ConfigMock_GetBuildkitHost_Call{Call: _e.mock.On("GetBuildkitHost")}
}

func (_c *ConfigMock_GetBuildkitHost_Call) Run(run func()) *ConfigMock_GetBuildkitHost_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ConfigMock_GetBuildkitHost_Call) Return(_a0 string) *ConfigMock_GetBuildkitHost_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ConfigMock_GetBuildkitHost_Call) RunAndReturn(run func() string) *ConfigMock_GetBuildkitHost_Call {
	_c.Call.Return(run)
	return _c
}

// GetKubeConfig provides a mock function with no fields
func (_m *ConfigMock) GetKubeConfig() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetKubeConfig")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ConfigMock_GetKubeConfig_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetKubeConfig'
type ConfigMock_GetKubeConfig_Call struct {
	*mock.Call
}

// GetKubeConfig is a helper method to define mock.On call
func (_e *ConfigMock_Expecter) GetKubeConfig() *ConfigMock_GetKubeConfig_Call {
	return &ConfigMock_GetKubeConfig_Call{Call: _e.mock.On("GetKubeConfig")}
}

func (_c *ConfigMock_GetKubeConfig_Call) Run(run func()) *ConfigMock_GetKubeConfig_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ConfigMock_GetKubeConfig_Call) Return(_a0 string) *ConfigMock_GetKubeConfig_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ConfigMock_GetKubeConfig_Call) RunAndReturn(run func() string) *ConfigMock_GetKubeConfig_Call {
	_c.Call.Return(run)
	return _c
}

// GetKubeProxyURL provides a mock function with no fields
func (_m *ConfigMock) GetKubeProxyURL() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetKubeProxyURL")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ConfigMock_GetKubeProxyURL_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetKubeProxyURL'
type ConfigMock_GetKubeProxyURL_Call struct {
	*mock.Call
}

// GetKubeProxyURL is a helper method to define mock.On call
func (_e *ConfigMock_Expecter) GetKubeProxyURL() *ConfigMock_GetKubeProxyURL_Call {
	return &ConfigMock_GetKubeProxyURL_Call{Call: _e.mock.On("GetKubeProxyURL")}
}

func (_c *ConfigMock_GetKubeProxyURL_Call) Run(run func()) *ConfigMock_GetKubeProxyURL_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ConfigMock_GetKubeProxyURL_Call) Return(_a0 string) *ConfigMock_GetKubeProxyURL_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ConfigMock_GetKubeProxyURL_Call) RunAndReturn(run func() string) *ConfigMock_GetKubeProxyURL_Call {
	_c.Call.Return(run)
	return _c
}

// GetPostgresDB provides a mock function with no fields
func (_m *ConfigMock) GetPostgresDB() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetPostgresDB")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ConfigMock_GetPostgresDB_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetPostgresDB'
type ConfigMock_GetPostgresDB_Call struct {
	*mock.Call
}

// GetPostgresDB is a helper method to define mock.On call
func (_e *ConfigMock_Expecter) GetPostgresDB() *ConfigMock_GetPostgresDB_Call {
	return &ConfigMock_GetPostgresDB_Call{Call: _e.mock.On("GetPostgresDB")}
}

func (_c *ConfigMock_GetPostgresDB_Call) Run(run func()) *ConfigMock_GetPostgresDB_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ConfigMock_GetPostgresDB_Call) Return(_a0 string) *ConfigMock_GetPostgresDB_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ConfigMock_GetPostgresDB_Call) RunAndReturn(run func() string) *ConfigMock_GetPostgresDB_Call {
	_c.Call.Return(run)
	return _c
}

// GetPostgresHost provides a mock function with no fields
func (_m *ConfigMock) GetPostgresHost() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetPostgresHost")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ConfigMock_GetPostgresHost_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetPostgresHost'
type ConfigMock_GetPostgresHost_Call struct {
	*mock.Call
}

// GetPostgresHost is a helper method to define mock.On call
func (_e *ConfigMock_Expecter) GetPostgresHost() *ConfigMock_GetPostgresHost_Call {
	return &ConfigMock_GetPostgresHost_Call{Call: _e.mock.On("GetPostgresHost")}
}

func (_c *ConfigMock_GetPostgresHost_Call) Run(run func()) *ConfigMock_GetPostgresHost_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ConfigMock_GetPostgresHost_Call) Return(_a0 string) *ConfigMock_GetPostgresHost_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ConfigMock_GetPostgresHost_Call) RunAndReturn(run func() string) *ConfigMock_GetPostgresHost_Call {
	_c.Call.Return(run)
	return _c
}

// GetPostgresPassword provides a mock function with no fields
func (_m *ConfigMock) GetPostgresPassword() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetPostgresPassword")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ConfigMock_GetPostgresPassword_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetPostgresPassword'
type ConfigMock_GetPostgresPassword_Call struct {
	*mock.Call
}

// GetPostgresPassword is a helper method to define mock.On call
func (_e *ConfigMock_Expecter) GetPostgresPassword() *ConfigMock_GetPostgresPassword_Call {
	return &ConfigMock_GetPostgresPassword_Call{Call: _e.mock.On("GetPostgresPassword")}
}

func (_c *ConfigMock_GetPostgresPassword_Call) Run(run func()) *ConfigMock_GetPostgresPassword_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ConfigMock_GetPostgresPassword_Call) Return(_a0 string) *ConfigMock_GetPostgresPassword_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ConfigMock_GetPostgresPassword_Call) RunAndReturn(run func() string) *ConfigMock_GetPostgresPassword_Call {
	_c.Call.Return(run)
	return _c
}

// GetPostgresPort provides a mock function with no fields
func (_m *ConfigMock) GetPostgresPort() int {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetPostgresPort")
	}

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// ConfigMock_GetPostgresPort_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetPostgresPort'
type ConfigMock_GetPostgresPort_Call struct {
	*mock.Call
}

// GetPostgresPort is a helper method to define mock.On call
func (_e *ConfigMock_Expecter) GetPostgresPort() *ConfigMock_GetPostgresPort_Call {
	return &ConfigMock_GetPostgresPort_Call{Call: _e.mock.On("GetPostgresPort")}
}

func (_c *ConfigMock_GetPostgresPort_Call) Run(run func()) *ConfigMock_GetPostgresPort_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ConfigMock_GetPostgresPort_Call) Return(_a0 int) *ConfigMock_GetPostgresPort_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ConfigMock_GetPostgresPort_Call) RunAndReturn(run func() int) *ConfigMock_GetPostgresPort_Call {
	_c.Call.Return(run)
	return _c
}

// GetPostgresSSLMode provides a mock function with no fields
func (_m *ConfigMock) GetPostgresSSLMode() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetPostgresSSLMode")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ConfigMock_GetPostgresSSLMode_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetPostgresSSLMode'
type ConfigMock_GetPostgresSSLMode_Call struct {
	*mock.Call
}

// GetPostgresSSLMode is a helper method to define mock.On call
func (_e *ConfigMock_Expecter) GetPostgresSSLMode() *ConfigMock_GetPostgresSSLMode_Call {
	return &ConfigMock_GetPostgresSSLMode_Call{Call: _e.mock.On("GetPostgresSSLMode")}
}

func (_c *ConfigMock_GetPostgresSSLMode_Call) Run(run func()) *ConfigMock_GetPostgresSSLMode_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ConfigMock_GetPostgresSSLMode_Call) Return(_a0 string) *ConfigMock_GetPostgresSSLMode_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ConfigMock_GetPostgresSSLMode_Call) RunAndReturn(run func() string) *ConfigMock_GetPostgresSSLMode_Call {
	_c.Call.Return(run)
	return _c
}

// GetPostgresUser provides a mock function with no fields
func (_m *ConfigMock) GetPostgresUser() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetPostgresUser")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ConfigMock_GetPostgresUser_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetPostgresUser'
type ConfigMock_GetPostgresUser_Call struct {
	*mock.Call
}

// GetPostgresUser is a helper method to define mock.On call
func (_e *ConfigMock_Expecter) GetPostgresUser() *ConfigMock_GetPostgresUser_Call {
	return &ConfigMock_GetPostgresUser_Call{Call: _e.mock.On("GetPostgresUser")}
}

func (_c *ConfigMock_GetPostgresUser_Call) Run(run func()) *ConfigMock_GetPostgresUser_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ConfigMock_GetPostgresUser_Call) Return(_a0 string) *ConfigMock_GetPostgresUser_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ConfigMock_GetPostgresUser_Call) RunAndReturn(run func() string) *ConfigMock_GetPostgresUser_Call {
	_c.Call.Return(run)
	return _c
}

// GetSystemNamespace provides a mock function with no fields
func (_m *ConfigMock) GetSystemNamespace() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetSystemNamespace")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ConfigMock_GetSystemNamespace_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetSystemNamespace'
type ConfigMock_GetSystemNamespace_Call struct {
	*mock.Call
}

// GetSystemNamespace is a helper method to define mock.On call
func (_e *ConfigMock_Expecter) GetSystemNamespace() *ConfigMock_GetSystemNamespace_Call {
	return &ConfigMock_GetSystemNamespace_Call{Call: _e.mock.On("GetSystemNamespace")}
}

func (_c *ConfigMock_GetSystemNamespace_Call) Run(run func()) *ConfigMock_GetSystemNamespace_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ConfigMock_GetSystemNamespace_Call) Return(_a0 string) *ConfigMock_GetSystemNamespace_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ConfigMock_GetSystemNamespace_Call) RunAndReturn(run func() string) *ConfigMock_GetSystemNamespace_Call {
	_c.Call.Return(run)
	return _c
}

// NewConfigMock creates a new instance of ConfigMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewConfigMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *ConfigMock {
	mock := &ConfigMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
